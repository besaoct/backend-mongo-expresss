import nodemailer from "nodemailer";
import dotenv from "dotenv";

dotenv.config();

export const sendVerificationEmail = async (to: string, token: string) => {
  const transporter = nodemailer.createTransport({
    service: "gmail",
    auth: {
      user: process.env.EMAIL_USER, // Your Gmail address
      pass: process.env.EMAIL_PASS, // App Password generated by Google
    },
  });

  const mailOptions = {
    from: process.env.EMAIL_USER,
    to,
    subject: "Verify Your Email",
    text: `Please click the following link to verify your email: 
  ${process.env.FRONTEND_DOMAIN}/api/users/verify-email?token=${token}`,
  };

  try {
    await transporter.sendMail(mailOptions);
    console.log("Verification email sent successfully");
  } catch (err) {
    console.error("Error sending verification email", err);
    throw err;
  }
};


export const sendResetPasswordEmail = async (email: string, token: string) => {
  const resetLink = `${process.env.FRONTEND_URL}/reset-password?token=${token}`;
  const transporter = nodemailer.createTransport({
    service: "Gmail", 
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_PASS,
    },
  });

  const mailOptions = {
    from: process.env.EMAIL_USER,
    to: email,
    subject: "Password Reset Request",
    html: `
      <p>You requested to reset your password. Click the link below to set a new password:</p>
      <a href="${resetLink}" target="_blank">Reset Password</a>
      <p>This link is valid for 1 hour.</p>
    `,
  };

  await transporter.sendMail(mailOptions);
};
